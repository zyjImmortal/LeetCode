"""
HTTP:是一种超文本传输协议，请求访问资源一种协议，在头部通过不同的字段和格式，定义请求资源的路径、http版本
方式，以及以何种方式进行资源返回
1、协商的字段：
2、客户端定的字段：
    keep-alive：持久连接，管线化：并行发送多个请求
    content-type：报文内容类型
3、服务器定的字段：
    set-cookie：

Tcp：可靠性体现：
    校验和
    序列号
    确认应答
    重发控制
    连接管理
    窗口控制
流量专项测试：
    1、如何设计场景：比如一个图片上传的场景：我们可以查看windows— size大小与未被确认的数据大小进行比对，
        看下是否充分利用链路的接受能力，服务端的revbuffer和客户端是否有自己做分片，为了绕过拥塞窗口
    2、数据收集：aro可以查出静态资源压缩的问题
    3、性能数据分析
    4、遇到过的问题，如何发现、怎样修复
    5、优化建议
        a、弱网环境下，发生丢包重传时，最好能做到只传丢失的部分
        b、网络延时
        c、静态资源压缩
        d、定时网络请求合并到一个时间段进行
        e、webview缓存
电量专项测试：
    1、场景设计：
    2、数据收集以及分析
    3、造成电量消耗的点有哪些
    4、用到的工具有哪些：gt、adb shell dumpsys power，查看wacklock
流畅度专项测试：
    1、评价指标
    2、测试场景
    3、测试工具有哪些
内存分析
    1、常见内存问题有哪些：登陆activity未destory造成内存泄漏，考虑到登陆成功后安排皮会进行很多初始化的工作华友一些网络请求，
        为了减少内存占用，在首页activity的oncreate方法中直接finish掉，类似过渡的界面且没有back操作的，都finish掉
        a、内存泄漏：导致可用的heap变少，频发的触发GC，导致卡顿，h最终导OOM
                常见场景：线程请求网络数据
        b、
    2、如何进行内存测试
    3、举例：多次退出登陆闪退问题
appium监听机制
junit监听机制
tcp/Ip，http协议
monkey、uiautomator
python：
    1、装饰器
    2、迭代器、生成器、可迭代对象
    3、浅复制、深复制
"""